When would you want to use a remote repository rather than keeping all your work local?
A remote repository increase portability and is easier to share with others. Also it makes sure there would be a copy kept intact.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
There could be local changes that haven't been pushed to the remote repository. That case Git might stay synchronized with an out-of-date version.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork clones a repository on GitHub and create a new and exactly same one on oneself's account. Clone as it is named clones a local or remote repository to the local machine. Branches are routes of development in a repository.
Fork: clone other's repository to keep the original one as it is while give recognition to the author.
Clone: fully copy a remote or local repository to the local machine.
Branch: branch is used when one wants to try new features while keeping a fully functional version.

What is the benefit of having a copy of the last known state of the remote stored locally?
Keeping a copy the last known state of the remote branches helps one understand how different one's repository is from the remote one. This makes the remote branch like a branch independent of the local one; thus, one can merge the local changes with the remote changes if any before committing.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without Git or GitHub, one would have difficulty sharing and keeping track of a project. However, changes could be done more freely sometimes even more efficiently with a huge risk to inadvertently ruin the project the team is working on.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Small bug fixes that are known isolated to only one part of the code, and doc modification are more suitable to make directly in master in terms of work efficiency. Larger projects that require more than one release to complete, or a long time to finish are better done in a separate branch as a sandbox to keep the master clean.